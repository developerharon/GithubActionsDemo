name: .NET Continuous Deployment

on:
  push:
    branches: [ "main" ]
    paths: 
      - GithubActionsDemo/**
  workflow_dispatch:

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['3.0', '3.1.x', '5.0.x', '6.0.x' ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Test
        run: dotnet test --verbosity normal --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}"
      - name: Upload dotnet test results
        uses: actions/upload-artifact@v3
        with:
          name: dotnet-results-${{ matrix.dotnet-version }}
          path: TestResults-${{ matrix.dotnet-version }}
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

  semantic-release:
  
    needs: test
    name: Create a Package Release

    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ['3.0', '3.1.x', '5.0.x', '6.0.x' ]
    
    steps:
      - uses: actions/checkout@v3
        - name: Setup .NET SDK ${{ matrix.dotnet-version }}
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: ${{ matrix.dotnet-version }}
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.TOKEN }}
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
      - name: Create Nuget Package
        run: dotnet build -c Release ./GithubActionsDemo/GithubActionsDemo.csproj && dotnet pack -c Release -p:PackageVersion=${{ steps.tag_version.outputs.new_version }} -o . ./GithubActionsDemo/GithubActionsDemo.csproj
      - name: Upload Package for Publishing
        uses: actions/upload-artifact@v3
        with:
          name: PackedLib
          path: ./*.nupkg

  github-publish:
    needs: semantic-release
    name: Publish to Github
    
    runs-on: ubuntu-latest
      strategy:
        matrix:
          dotnet-version: ['3.0', '3.1.x', '5.0.x', '6.0.x' ]

    steps:
      - name: Download built project  
        uses: actions/download-artifact@v3
        with:
          name: PackedLib
      - name: Setup .NET SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
    
      - name: Push Package to GitHub
        run: dotnet nuget push --api-key ${{secrets.GITHUB_TOKEN}} --source "https://nuget.pkg.github.com/hughesjs/index.json" *.nupkg
